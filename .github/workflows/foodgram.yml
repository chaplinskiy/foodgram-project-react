name: foodgram-workflow

on: [push]


jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt 
    - name: Test with flake8
      run: |
        python -m flake8
  
  build_and_push_to_docker_hub:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          no-cache: true
          push: true
          context: ./backend/
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
  
  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Copy configuration files to remote target
        # uses: appleboy/scp-action@master
        # with:
        #   host: ${{ secrets.HOST }}
        #   username: ${{ secrets.USER }}
        #   key: ${{ secrets.SSH_KEY }}
        #   passphrase: ${{ secrets.PASSPHRASE }}
        #   source: 'infra/.dockerignore'
        #   target: '~'
        #   strip_components: 1
        uses: nogsantos/scp-deploy@master
        with:
          src: './infra/*'
          host: ${{ secrets.HOST }}
          remote: '~'
          user: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          # passphrase: ${{ secrets.PASSPHRASE }}
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose down -v
            sudo docker system prune -af --volumes
            # sudo docker-compose stop
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            sudo docker-compose rm backend
            touch .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >| .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            sudo docker-compose up -d
            sudo docker exec chaplinskiy_backend_1 python manage.py migrate --no-input
            sudo docker exec chaplinskiy_backend_1 python manage.py createsuperuser --email ${{ secrets.SUPERUSER_EMAIL }} --username ${{ secrets.SUPERUSER_USERNAME }} --first_name ${{ secrets.SUPERUSER_FIRSTNAME }} --last_name ${{ secrets.SUPERUSER_LASTNAME }} --no-input
            sudo docker exec chaplinskiy_backend_1 python manage.py collectstatic --no-input
            sudo docker exec chaplinskiy_backend_1 python manage.py add_users
            sudo docker exec chaplinskiy_backend_1 python manage.py add_tag
            sudo docker exec chaplinskiy_backend_1 python manage.py add_ingredients
            sudo docker exec chaplinskiy_backend_1 python manage.py add_recipes
            
  
  send_message:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
